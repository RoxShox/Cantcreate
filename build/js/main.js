/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/main.js":
/*!************************!*\
  !*** ./src/js/main.js ***!
  \************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("const animations = __webpack_require__(/*! ./modules/animations */ \"./src/js/modules/animations.js\");\r\nconst scrolltop = __webpack_require__(/*! ./modules/scrollto */ \"./src/js/modules/scrollto.js\");\r\nconst cursor = __webpack_require__(/*! ./modules/cursor */ \"./src/js/modules/cursor.js\");\r\nconst loadPosts = __webpack_require__(/*! ./modules/scrollingPosts */ \"./src/js/modules/scrollingPosts.js\");\r\nconst aboutProjectScrollAnimations = __webpack_require__(/*! ./modules/about-project-animations */ \"./src/js/modules/about-project-animations.js\");\r\nconst portfolioGalleryScroll = __webpack_require__(/*! ./modules/portfolio-gallery-scroll */ \"./src/js/modules/portfolio-gallery-scroll.js\");\r\nconst textScrollAnim = __webpack_require__(/*! ./modules/text-scroll-anim */ \"./src/js/modules/text-scroll-anim.js\");\r\nconst textScrollAnimFull = __webpack_require__(/*! ./modules/text-scroll-banner */ \"./src/js/modules/text-scroll-banner.js\");\r\nconst bgImgScrollAnimFull = __webpack_require__(/*! ./modules/bg-img-scroll-anim.js */ \"./src/js/modules/bg-img-scroll-anim.js\");\r\nconst textScrollIndexPage = __webpack_require__(/*! ./modules/text-scroll-index.js */ \"./src/js/modules/text-scroll-index.js\");\r\nanimations();\r\nscrolltop();\r\ncursor();\r\nloadPosts();\r\naboutProjectScrollAnimations();\r\nportfolioGalleryScroll();\r\ntextScrollAnim();\r\ntextScrollAnimFull();\r\nbgImgScrollAnimFull();\r\ntextScrollIndexPage();\r\n\r\n// slider-works\r\n$('.works__slider').slick({\r\n    infinite: true,\r\n    speed: 300,\r\n    slidesToShow: 1,\r\n    centerMode: true,\r\n    variableWidth: true\r\n});\r\n\r\n$('.double-slider').slick({\r\n    infinite: true,\r\n    speed: 300,\r\n    slidesToShow: 2,\r\n    autoplay: true\r\n});\r\n\r\nlet body = document.querySelector('body')\r\nlet burgerBtn = document.querySelector('.burger-menu');\r\nlet menuContent = document.querySelector('.dropdown-menu');\r\n\r\nburgerBtn.addEventListener('click', function () {\r\n    console.log(123)\r\n    if (menuContent.classList.contains('flex') === false) {\r\n        menuContent.classList.add('flex');\r\n        burgerBtn.classList.add('burger-close');\r\n        menuContent.classList.remove('hide');\r\n        body.classList.add('scroll-hide');\r\n    } else {\r\n        menuContent.classList.remove('flex');\r\n        burgerBtn.classList.remove('burger-close');\r\n        menuContent.classList.add('hide');\r\n        body.classList.remove('scroll-hide');\r\n    }\r\n})\r\n\r\n// onmousemove = function(e){console.log(\"mouse location:\", e.clientX, e.clientY)}\r\n\r\n//dropdown\r\ntry {\r\n    let navigationSelect = document.querySelector('.select-wrapper');\r\n\r\n    function initSelect(elem) {\r\n        var selectHolder = elem.querySelector('.holder');\r\n        var selectOptions = elem.querySelectorAll('.dropdownOption li');\r\n        var dropHolder = elem.querySelector('.dropdown');\r\n        var selectedOption = selectOptions[0];\r\n        selectedOption.classList.add('current');\r\n        selectHolder.addEventListener('click', function () {\r\n            dropHolder.classList.toggle('active');\r\n        });\r\n        selectOptions.forEach(function (currentElement) {\r\n            currentElement.addEventListener('click', function () {\r\n                selectedOption.classList.remove('current');\r\n                selectedOption = currentElement;\r\n                currentElement.classList.add('current');\r\n                selectHolder.innerHTML = currentElement.innerHTML;\r\n                dropHolder.classList.toggle('active');\r\n            });\r\n        });\r\n    }\r\n\r\n    initSelect(navigationSelect);\r\n} catch (e) {\r\n\r\n}\r\n\r\n//accept\r\nif (document.querySelector('.accept-policy span.yes')) {\r\n    let acceptBlockElYes = document.querySelector('.accept-policy span.yes');\r\n    let acceptBlockElNo = document.querySelector('.accept-policy span.no');\r\n\r\n    acceptBlockElYes.addEventListener('click', function () {\r\n        if (acceptBlockElNo.classList.contains('active')) {\r\n            acceptBlockElNo.classList.remove('active')\r\n            acceptBlockElYes.classList.add('active')\r\n        } else {\r\n            acceptBlockElYes.classList.add('active')\r\n        }\r\n    })\r\n    acceptBlockElNo.addEventListener('click', function () {\r\n        if (acceptBlockElYes.classList.contains('active')) {\r\n            acceptBlockElYes.classList.remove('active')\r\n            acceptBlockElNo.classList.add('active')\r\n        } else {\r\n            acceptBlockElNo.classList.toggle('active')\r\n        }\r\n    })\r\n}\r\n\r\n//animate aos\r\nAOS.init({\r\n    duration: 1200,\r\n})\r\n\r\n//scroll section\r\n\r\n//count number\r\nlet statsSection = document.querySelector('.stats')\r\n\r\nif (statsSection) {\r\n    statsSection.addEventListener('mouseover', function () {\r\n        $('.stats__item-number').each(function () {\r\n            $(this).prop('Counter', 0).animate({\r\n                Counter: $(this).text()\r\n            }, {\r\n                duration: 4000,\r\n                easing: 'swing',\r\n                step: function (now) {\r\n                    $(this).text(Math.ceil(now));\r\n                }\r\n            });\r\n        });\r\n    })\r\n}\r\n\r\n//triple-section\r\n\r\nlet tripleSection = document.querySelector('.triple')\r\nif (tripleSection) {\r\n    tripleSection.addEventListener('mouseover', function () {\r\n        tripleSection.classList.add('scroll-sec')\r\n    })\r\n    // tripleSection.addEventListener('mouseleave', function () {\r\n    //     tripleSection.classList.remove('scroll-sec')\r\n    // })\r\n}\r\n\r\n//video\r\ntry {\r\n    function video() {\r\n        const player = document.querySelector('.player');\r\n        const video = player.querySelector('.viewer');\r\n\r\n        const progressRange = document.querySelector('.progress-range');\r\n        const progressBar = document.querySelector('.progress-bar');\r\n        const currentTime = document.querySelector('.time-elapsed');\r\n        const duration = document.querySelector('.time-duration');\r\n\r\n        const playBtn = document.getElementById('play-btn');\r\n        const stopBtn = player.querySelector('.stop');\r\n\r\n        const skipButtons = player.querySelectorAll('[data-skip]');\r\n\r\n        const speakerIcon = player.querySelector('#speaker_icon');\r\n        const ranges = player.querySelectorAll('.player_slider');\r\n        /* MUTE button */\r\n        const speaker = player.querySelector('.speaker');\r\n        const volInput = player.querySelector('input[name=\"volume\"]')\r\n//const speakerIcon = player.querySelector('#speaker_icon');\r\n\r\n// show play button when paused\r\n        function showPlayIcon() {\r\n            playBtn.classList.replace('fa-pause', 'fa-play');\r\n            playBtn.setAttribute('title', 'Play');\r\n        }\r\n\r\n// toggle between play and pause\r\n        function togglePlay() {\r\n            if (video.paused) {\r\n                video.play();\r\n                playBtn.classList.replace('fa-play', 'fa-pause');\r\n                playBtn.setAttribute('title', 'Pause');\r\n            } else {\r\n                video.pause();\r\n                showPlayIcon();\r\n            }\r\n        }\r\n\r\n// Stop video\r\n        function stopVideo() {\r\n            video.currentTime = 0;\r\n            video.pause();\r\n        }\r\n\r\n// not sure, is this for FF and REW?\r\n        function skip() {\r\n            video.currentTime += +(this.dataset.skip);\r\n        }\r\n\r\n// volume functions\r\n        function handleRangeUpdate() {\r\n            video[this.name] = this.value;\r\n            (video['volume'] === 0 ? speakerIcon.className = \"fa fa-volume-off\" :\r\n                speakerIcon.className = \"fa fa-volume-up\")\r\n        }\r\n\r\n        let muted = false;\r\n\r\n        function mute() {\r\n            if (!muted) {\r\n                video['volume'] = 0;\r\n                volInput.value = 0;\r\n                speakerIcon.className = \"fa fa-volume-off\"\r\n                muted = true;\r\n            } else {\r\n                video['volume'] = 1;\r\n                volInput.value = 1;\r\n                muted = false;\r\n                speakerIcon.className = \"fa fa-volume-up\"\r\n            }\r\n        }\r\n\r\n// update progress bar as the video plays\r\n        function updateProgress() {\r\n            progressBar.style.width = `${(video.currentTime / video.duration) * 100}%`;\r\n            currentTime.textContent = `${displayTime(video.currentTime)} /`;\r\n            duration.textContent = `${displayTime(video.duration)}`;\r\n        }\r\n\r\n// Calculate display time format\r\n        function displayTime(time) {\r\n            const minutes = Math.floor(time / 60);\r\n            let seconds = Math.floor(time % 60);\r\n            seconds = seconds > 9 ? seconds : `0${seconds}`;\r\n            return `${minutes}:${seconds}`;\r\n        }\r\n\r\n// Click to seek within the video\r\n        function setProgress(e) {\r\n            const newTime = e.offsetX / progressRange.offsetWidth;\r\n            progressBar.style.width = `${newTime * 100}%`;\r\n            video.currentTime = newTime * video.duration;\r\n        }\r\n\r\n        function scrub(event) {\r\n            const scrubTime = (event.offsetX / progressRange.offsetWidth) * video.duration;\r\n            video.currentTime = scrubTime;\r\n        }\r\n\r\n// Spacebar used to play and pause\r\n        document.body.onkeyup = function (e) {\r\n            if (e.keyCode == 32) {\r\n                togglePlay();\r\n            }\r\n        }\r\n        let videoBlock = document.querySelector('.video-block')\r\n\r\n// =======================\r\n        video.addEventListener('timeupdate', updateProgress);\r\n        video.addEventListener('canplay', updateProgress);\r\n        progressRange.addEventListener('click', setProgress);\r\n// ===================\r\n        /*functions linked to elements*/\r\n// play, pause, stop\r\n        video.addEventListener('click', togglePlay);\r\n        video.addEventListener('keydown', (event) => event.keyCode === 32 && togglePlay());\r\n        playBtn.addEventListener('click', togglePlay);\r\n        stopBtn.addEventListener('click', stopVideo);\r\n// skip forward or backward\r\n        skipButtons.forEach(button => button.addEventListener('click', skip));\r\n// volume\r\n        ranges.forEach(range => range.addEventListener('change', handleRangeUpdate));\r\n        ranges.forEach(range => range.addEventListener('mousemove', handleRangeUpdate));\r\n        speaker.addEventListener('click', mute)\r\n\r\n// progress bar controls\r\n        let mouseDown = false;\r\n        progressRange.addEventListener('click', scrub);\r\n        progressRange.addEventListener('mousemove', (event) => mouseDown && scrub(event));\r\n        progressRange.addEventListener('mousedown', () => mouseDown = true);\r\n        progressRange.addEventListener('mouseup', () => mouseDown = false);\r\n\r\n//fullscreen mode\r\n        const screen_size = player.querySelector('.screenSize');\r\n        const controls = player.querySelector('.player_controls');\r\n        const screenSize_icon = player.querySelector('#screenSize_icon');\r\n\r\n        function changeScreenSize() {\r\n            if (player.mozRequestFullScreen) {\r\n\r\n                player.mozRequestFullScreen();\r\n                //change icon\r\n                screenSize_icon.className = \"fa fa-compress\";\r\n                /*control panel once fullscreen*/\r\n                video.addEventListener('mouseout', () => controls.style.transform = 'translateY(100%) translateX(-5px)');\r\n                video.addEventListener('mouseover', () => controls.style.transform = 'translateY(0)');\r\n                controls.addEventListener('mouseover', () => controls.style.transform = 'translateY(0)');\r\n                screen_size.addEventListener('click', () => {\r\n                    if (document.exitFullscreen) {\r\n                        document.exitFullscreen();\r\n                    } else if (document.mozCancelFullScreen) {\r\n                        document.mozCancelFullScreen();\r\n                        screenSize_icon.className = \"fa fa-expand\";\r\n                    }\r\n                });\r\n            } else if (player.webkitRequestFullScreen) {\r\n\r\n                player.webkitRequestFullScreen();\r\n\r\n                screenSize_icon.className = \"fa fa-compress\";\r\n\r\n                video.addEventListener('mouseout', () => controls.style.transform = 'translateY(100%) translateX(-5px)');\r\n                video.addEventListener('mouseover', () => controls.style.transform = 'translateY(0)');\r\n                controls.addEventListener('mouseover', () => controls.style.transform = 'translateY(0)');\r\n                screen_size.addEventListener('click', () => {\r\n                    if (document.exitFullscreen) {\r\n                        document.exitFullscreen();\r\n                    } else if (document.webkitExitFullscreen) {\r\n                        document.webkitExitFullscreen();\r\n                        screenSize_icon.className = \"fa fa-expand\";\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        screen_size.addEventListener('click', changeScreenSize);\r\n\r\n    }\r\n\r\n    video();\r\n} catch {\r\n\r\n}\r\n\r\nconst choiceBtn = document.querySelectorAll('.choice__btn');\r\n\r\nchoiceBtn.forEach(btn => {\r\n    btn.addEventListener('click', () => {\r\n        btn.classList.toggle('color-flex')\r\n    })\r\n})\r\n\r\n// Accordion\t\r\n\r\n$('.services-links__link').on('click', function(){\r\n\t$('.services-links__item').removeClass('services-links__item--active');\r\n\t$(this).parent().addClass('services-links__item--active');\r\n})\r\n\r\nconst btnCloseAccordion = document.querySelectorAll('.services-links__item-close');\r\nconst accordDescr = document.querySelectorAll('.services-links__item')\r\n\r\nbtnCloseAccordion.forEach(btn => {\r\n\tbtn.addEventListener('click', function(){\r\n\t\taccordDescr.forEach(item =>{\r\n\t\t\titem.classList.remove('services-links__item--active')\r\n\t\t})\r\n\t})\r\n})\r\n\r\n\r\n// Parallax\t\r\n\r\n \r\nlet bg = document.querySelectorAll('.about-canc__photo');\r\nfor (let i = 0; i < bg.length; i++){\r\n    window.addEventListener('mousemove', function(e) { \r\n        let x = e.clientX / window.innerWidth;\r\n        let y = e.clientY / window.innerHeight;     \r\n        bg[i].style.transform = 'translate(-' + x * 50 + 'px, -' + y * 50 + 'px)';\r\n    });    \r\n}\r\n\r\n // scroll-top\r\n$(\"document\").ready(function($){\r\n    var scrollBtn = $('.scroll-svg');\r\n    var scrollWrap = $('.scroll-top');\r\n\r\n    $(window).scroll(function () {\r\n        if ($(this).scrollTop() > 1000) {\r\n            scrollBtn.addClass(\"doch\");\r\n            scrollWrap.addClass(\"doch\");\r\n\r\n        } else {\r\n            scrollBtn.removeClass(\"doch\");\r\n            scrollWrap.removeClass(\"doch\");\r\n        }\r\n    });\r\n});\r\n\r\n(function(){\r\n    function id(v){return document.getElementById(v); }\r\n    function loadbar() {\r\n        var preloaderPercent = id(\"preloader-percent\"),\r\n            ovrl = id(\"preloader\"),\r\n            img = document.images,\r\n            cImg = 0;\r\n\r\n        var ImgTotal = img.length;\r\n\r\n        function imgLoaded(){\r\n            cImg += 1;\r\n            preloaderPercent.innerHTML = ((100 / ImgTotal * cImg) << 0).toString();\r\n            if(cImg===ImgTotal) return doneLoading();\r\n        }\r\n\r\n        function doneLoading(){\r\n            ovrl.style.opacity = 0;\r\n            setTimeout(function(){\r\n                ovrl.style.display = \"none\";\r\n            }, 100);\r\n        }\r\n\r\n        preloaderPercent.innerHTML = '1';\r\n\r\n        setTimeout(function () {\r\n            if (ImgTotal) {\r\n                for(var i=0; i<ImgTotal; i++) {\r\n                    var tImg     = new Image();\r\n                    tImg.onload  = imgLoaded;\r\n                    tImg.onerror = imgLoaded;\r\n                    tImg.src     = img[i].src;\r\n                }\r\n            }\r\n            else {\r\n                preloaderPercent.innerHTML = '100';\r\n                doneLoading();\r\n            }\r\n        }, 500);\r\n    }\r\n    document.addEventListener('DOMContentLoaded', loadbar, false);\r\n}());\r\n\r\n\r\n$('#audio-control').click(function(){\r\n    if( $(\"#video-main\").prop('muted') ) {\r\n        $(\"#video-main\").prop('muted', false);\r\n\r\n        // or toggle class, style it with a volume icon sprite, change background-position\r\n    } else {\r\n        $(\"#video-main\").prop('muted', true);\r\n    }\r\n});\r\n\r\n\r\n\n\n//# sourceURL=webpack://gulp_build/./src/js/main.js?");

/***/ }),

/***/ "./src/js/modules/about-project-animations.js":
/*!****************************************************!*\
  !*** ./src/js/modules/about-project-animations.js ***!
  \****************************************************/
/***/ (function(module) {

eval("module.exports = function () {\r\n    if(window.location.pathname === '/about-project.html') {\r\n        let scrollItem1 = document.querySelector('.triple-items.animate > .triple-item:nth-child(1)'),\r\n            scrollItem2 = document.querySelector('.triple-items.animate > .triple-item:nth-child(2)'),\r\n            scrollItem3 = document.querySelector('.triple-items.animate > .triple-item:nth-child(3)');\r\n\r\n        gsap\r\n            .timeline({\r\n            scrollTrigger: {\r\n                trigger: \"section.triple\",\r\n                start: \"top 75%\",\r\n                end: \"bottom 90%\",\r\n                scrub: 1.5,\r\n            }\r\n        })\r\n            .to(scrollItem1, {y: '-=300px', duration: 0.5}, 0)\r\n            .to(scrollItem2, {y: '+=5%', duration: 0.5}, 0)\r\n            .to(scrollItem3, {y: '+=300px', duration: 0.5}, 0)\r\n    }\r\n}\n\n//# sourceURL=webpack://gulp_build/./src/js/modules/about-project-animations.js?");

/***/ }),

/***/ "./src/js/modules/animations.js":
/*!**************************************!*\
  !*** ./src/js/modules/animations.js ***!
  \**************************************/
/***/ (function(module) {

eval("module.exports = function animations() {\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n        gsap.registerPlugin(ScrollTrigger);\r\n\r\n        let heroSection = document.querySelector('section.hero') || false;\r\n        let videoEl = document.querySelector('.video-main video');\r\n        let mainText = document.querySelector('section.main-text');\r\n        let scrollProgressCircle = document.querySelector('.hero__scroll-inner svg circle:nth-child(2)');\r\n\r\n        if(heroSection) {\r\n            gsap.timeline({\r\n                scrollTrigger: {\r\n                    trigger: \".scroll-container\",\r\n                    start: \"top top\",\r\n                    end: \"50% 50%\",\r\n                    scrub: true,\r\n                    onUpdate: (self) => {\r\n                        scrollProgressCircle.style.strokeDashoffset = 'calc(240 - (240 * ' + Math.round(self.progress * 100) + ') / 100)'\r\n                    },\r\n                }\r\n            })\r\n                .to(videoEl, {scale: 2, duration: 0.5, ease: \"power2.out\"})\r\n\r\n            gsap.timeline({\r\n                scrollTrigger: {\r\n                    trigger: '.scroll-container',\r\n                    start: \"51% 50%\",\r\n                    end: \"70% 50%\",\r\n                    scrub: 2,\r\n                }\r\n            })\r\n                .to(['section.hero .cookies', 'section.hero .hero__scroll'],\r\n                    {\r\n                        y: '300',\r\n                        stagger: 0.15,\r\n                        duration: 1,\r\n                        ease: \"power2.out\"\r\n                    }\r\n                )\r\n\r\n            gsap.timeline({\r\n                scrollTrigger: {\r\n                    trigger: '.scroll-container',\r\n                    start: \"53% 50%\",\r\n                    end: \"bottom bottom\",\r\n                    scrub: 2,\r\n                }\r\n            })\r\n                .to(heroSection, {autoAlpha: 0.3}, 0)\r\n                .to(mainText, {autoAlpha: 1}, 0)\r\n                .fromTo('.main-text .container p', {autoAlpha: 0}, {y: '-60%', autoAlpha: 0.6, duration: 0.2}, 0)\r\n                .delay(1)\r\n                .to('.main-text .container p', {autoAlpha: 0})\r\n\r\n            gsap.timeline({\r\n                scrollTrigger: {\r\n                    trigger: '.scroll-container',\r\n                    start: \"70% 80%\",\r\n                    end: \"bottom top\",\r\n                    scrub: 2,\r\n                }\r\n            })\r\n                .set('.line-scroll .line-scroll--el', {y: '-=101%', opacity: 1})\r\n                .to('.line-scroll .line-scroll--el', {y: '+=190%', duration: 0.4}, 0)\r\n                .to('.main-text .line-scroll', {y: '+=60%'}, 0)\r\n                .to(mainText, {autoAlpha: 0})\r\n        }\r\n    });\r\n\r\n}\r\n\n\n//# sourceURL=webpack://gulp_build/./src/js/modules/animations.js?");

/***/ }),

/***/ "./src/js/modules/bg-img-scroll-anim.js":
/*!**********************************************!*\
  !*** ./src/js/modules/bg-img-scroll-anim.js ***!
  \**********************************************/
/***/ (function(module) {

eval("module.exports = function () {\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n        if (window.location.pathname === '/index.html') {\r\n            let bgImgBlock = document.querySelector('.block-bg-img');\r\n\r\n            try {\r\n                gsap\r\n                    .timeline({\r\n                        scrollTrigger: {\r\n                            trigger: 'section.about',\r\n                            scrub: 0.5,\r\n                            start: 'top top',\r\n                            end: 'bottom bottom',\r\n                            markers: true,\r\n                        }\r\n                    })\r\n                    .to(bgImgBlock, {css: {\r\n                        backgroundPositionY: '-300px'\r\n                        }}, 0)\r\n                    // .to(scrollText2, {x: '+=100%'}, 0)\r\n            } catch (e) {\r\n                console.warn(e.message)\r\n            }\r\n        }\r\n    })\r\n}\n\n//# sourceURL=webpack://gulp_build/./src/js/modules/bg-img-scroll-anim.js?");

/***/ }),

/***/ "./src/js/modules/cursor.js":
/*!**********************************!*\
  !*** ./src/js/modules/cursor.js ***!
  \**********************************/
/***/ (function(module) {

eval("module.exports = function cursor() {\r\n    let customCursorBlock = document.querySelectorAll('.custom-cursor-js') || false;\r\n\r\n    if (customCursorBlock) {\r\n        let cursor = createCursorElement(),\r\n            cursorScale = document.querySelectorAll('.cursor-scale'),\r\n            mouseX = 0,\r\n            mouseY = 0;\r\n\r\n        gsap.to({}, 0.016, {\r\n            repeat: -1,\r\n\r\n            onRepeat: function () {\r\n                gsap.set(cursor, {\r\n                    css: {\r\n                        left: mouseX,\r\n                        top: mouseY\r\n                    }\r\n                })\r\n            }\r\n        });\r\n\r\n        customCursorBlock.forEach(block => {\r\n            block.addEventListener('mousemove', function (e) {\r\n                cursor.classList.add('visible');\r\n                mouseX = e.clientX;\r\n                mouseY = e.clientY;\r\n            });\r\n\r\n            block.addEventListener('mouseleave', function (e) {\r\n                cursor.classList.remove('visible');\r\n            });\r\n        })\r\n\r\n        cursorScale.forEach(item => {\r\n            item.addEventListener('mouseleave', function () {\r\n                cursor.classList.remove('grow');\r\n                cursor.classList.remove('grow-small');\r\n                cursor.classList.remove('grow-big');\r\n                cursor.classList.remove('cursor-view');\r\n            });\r\n\r\n            item.addEventListener('mousemove', function () {\r\n                if (item.classList.contains('cursor-block-view')) {\r\n                    cursor.classList.remove('grow');\r\n                    cursor.classList.add('cursor-view');\r\n                } else {\r\n                    cursor.classList.add('grow');\r\n                }\r\n\r\n                if (item.classList.contains('small')) {\r\n                    cursor.classList.remove('grow');\r\n                    cursor.classList.add('grow-small');\r\n                }\r\n\r\n                if (item.classList.contains('big')) {\r\n                    cursor.classList.remove('grow');\r\n                    cursor.classList.add('grow-big');\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    function createCursorElement() {\r\n        let cursor = document.createElement(\"div\");\r\n        cursor.classList.add(\"cursor\");\r\n        document.querySelector('main').appendChild(cursor);\r\n\r\n        return cursor;\r\n    }\r\n}\n\n//# sourceURL=webpack://gulp_build/./src/js/modules/cursor.js?");

/***/ }),

/***/ "./src/js/modules/portfolio-gallery-scroll.js":
/*!****************************************************!*\
  !*** ./src/js/modules/portfolio-gallery-scroll.js ***!
  \****************************************************/
/***/ (function(module) {

eval("module.exports = function () {\r\n    if (window.location.pathname === '/portfolio-page.html') {\r\n        const line1 = document.querySelector('.picture-locomotive .picture-locomotive__line:nth-child(1)');\r\n        const line2 = document.querySelector('.picture-locomotive .picture-locomotive__line:nth-child(2)');\r\n        const line3 = document.querySelector('.picture-locomotive .picture-locomotive__line:nth-child(3)');\r\n        const line4 = document.querySelector('.picture-locomotive .picture-locomotive__line:nth-child(4)');\r\n\r\n        gsap.set(line1, {x: line1.scrollWidth / 3.5});\r\n        gsap.set(line2, {x: -line2.scrollWidth / 3.5});\r\n        gsap.set(line3, {x: line3.scrollWidth / 3.5});\r\n        gsap.set(line4, {x: -line4.scrollWidth / 3.5});\r\n\r\n        gsap.utils.toArray('.picture-locomotive .picture-locomotive__line').forEach((section, index) => {\r\n            const xEnd = (index % 2) ? section.scrollWidth / 5.5 : (section.scrollWidth / 5.5) * -1;\r\n            gsap.to(section, {\r\n                x: xEnd,\r\n                scrollTrigger: {\r\n                    trigger: '.picture-locomotive',\r\n                    scrub: 0.5,\r\n                    start: 'top 110%',\r\n                    end: 'bottom -20%',\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\n\n//# sourceURL=webpack://gulp_build/./src/js/modules/portfolio-gallery-scroll.js?");

/***/ }),

/***/ "./src/js/modules/scrollingPosts.js":
/*!******************************************!*\
  !*** ./src/js/modules/scrollingPosts.js ***!
  \******************************************/
/***/ (function(module) {

eval("module.exports = function () {\r\n    // only for blog-page\r\n    if (window.location.pathname === '/blog-page.html') {\r\n        const postsWrap = document.querySelector('.blog-cards-wrap');\r\n        const loadSpinner = document.getElementById('load-spinner');\r\n\r\n        let posts = postsWrap.querySelectorAll('.blog-card-item');\r\n        posts.forEach(post => {\r\n            postAnimation(post)\r\n        })\r\n\r\n        // animation for post\r\n        function postAnimation(post) {\r\n            const postThumb = post.querySelector('.blog-card__img img');\r\n\r\n            let showPostScene = gsap.timeline().from(post, {\r\n                duration: 1,\r\n                opacity: 0,\r\n                y: '35%',\r\n                ease: \"power1.easeIn\",\r\n            }, 0)\r\n                .set(postThumb, {height: 'auto'})\r\n                .from(postThumb, {height: 0, ease: \"power1.easeIn\", duration: 1}, 0)\r\n\r\n\r\n            ScrollTrigger.create({\r\n                animation: showPostScene,\r\n                trigger: post,\r\n                start: \"top 95%\",\r\n                end: \"top 95%\",\r\n            });\r\n        }\r\n\r\n        // get the posts from API\r\n        const getPosts = async (page, limit) => {\r\n            const API_URL = `https://api.javascripttutorial.net/v1/quotes/?page=${page}&limit=${limit}`;\r\n            const response = await fetch(API_URL);\r\n            // handle 404\r\n            if (!response.ok) {\r\n                throw new Error(`An error occurred: ${response.status}`);\r\n            }\r\n            return await response.json();\r\n        }\r\n\r\n        // show\r\n        const showPosts = (posts) => {\r\n            posts.forEach(post => {\r\n                const postEl = document.createElement(\"a\");\r\n                postEl.classList.add('blog-card-item');\r\n\r\n                postEl.innerHTML = `\r\n            <div class=\"blog-card-item__wrap\">\r\n                <div class=\"blog-card__img\">\r\n                    <img src=\"img/blog1.png\" alt=\"\">\r\n                </div>\r\n                <div class=\"blog-card-content\">\r\n                    <div class=\"blog-card__top\">\r\n                        <span class=\"date\">April 15, 2022</span><span>/</span><span class=\"category\">Design</span> <span class=\"category\">Film</span>\r\n                    </div>\r\n                    <div class=\"blog-card-title\">\r\n                        <p>A new art object near our office</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            `;\r\n\r\n                postsWrap.appendChild(postEl);\r\n                postAnimation(postEl);\r\n            })\r\n        }\r\n\r\n        const hideLoader = () => {\r\n            loadSpinner.classList.remove('visible');\r\n        }\r\n\r\n        const showLoader = () => {\r\n            loadSpinner.classList.add('visible');\r\n        }\r\n\r\n        const hasMorePosts = (page, limit, total) => {\r\n            const startIndex = (page - 1) * limit + 1;\r\n            return total === 0 || startIndex < total;\r\n        };\r\n\r\n        // load posts\r\n        const loadPosts = async (page, limit) => {\r\n\r\n            // show the loader\r\n            showLoader();\r\n\r\n            // 0.8 second later\r\n            setTimeout(async () => {\r\n                try {\r\n                    // if having more quotes to fetch\r\n                    if (hasMorePosts(page, limit, total)) {\r\n                        // call the API to get quotes\r\n                        const response = await getPosts(page, limit);\r\n                        // show quotes\r\n                        showPosts(response.data);\r\n                        // update the total\r\n                        total = response.total;\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error.message);\r\n                } finally {\r\n                    hideLoader();\r\n                }\r\n            }, 800);\r\n\r\n        };\r\n\r\n        // control variables\r\n        let currentPage = 1;\r\n        const limit = 6;\r\n        let total = 0;\r\n\r\n        // options intersection (monitoring last post element for load more)\r\n        let options = {\r\n            root: null,\r\n            rootMargin: \"0px 0px -20% 0px\",\r\n            threshold: 0.25\r\n        };\r\n\r\n        function handleIntersect(entries) {\r\n            entries.forEach((entry) => {\r\n                if (entry.isIntersecting && hasMorePosts(currentPage, limit, total)) {\r\n                    currentPage++;\r\n                    loadPosts(currentPage, limit);\r\n                }\r\n            });\r\n        }\r\n\r\n        let observer = new IntersectionObserver(handleIntersect, options);\r\n        // check last post element\r\n        observer.observe(loadSpinner);\r\n    }\r\n}\n\n//# sourceURL=webpack://gulp_build/./src/js/modules/scrollingPosts.js?");

/***/ }),

/***/ "./src/js/modules/scrollto.js":
/*!************************************!*\
  !*** ./src/js/modules/scrollto.js ***!
  \************************************/
/***/ (function(module) {

eval("module.exports = function scrolltop () {\r\n    const btn = document.getElementById(\"scrolltop-btn\") || false;\r\n    const scrollTopProgress = document.querySelector(\"#scrolltop-btn svg circle:nth-child(2)\");\r\n\r\n    if (btn) {\r\n        btn.addEventListener(\"click\", () => gsap.to(window, {duration: 2, scrollTo: {y: 0}, ease: \"power2.out\"}));\r\n        gsap.set(btn, {y: 150, autoAlpha: 0});\r\n\r\n        gsap.to(btn, {\r\n            y: 0,\r\n            autoAlpha: 1,\r\n            scrollTrigger: {\r\n                trigger: \".scrolltop-js\",\r\n                start: \"top 50%\",\r\n                end: \"max\",\r\n                toggleActions: \"play none none reverse\",\r\n                onUpdate: (self) => {\r\n                    scrollTopProgress.style.strokeDashoffset = 'calc(150 - (150 * ' + Math.round(self.progress * 100) + ') / 100)'\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n}\n\n//# sourceURL=webpack://gulp_build/./src/js/modules/scrollto.js?");

/***/ }),

/***/ "./src/js/modules/text-scroll-anim.js":
/*!********************************************!*\
  !*** ./src/js/modules/text-scroll-anim.js ***!
  \********************************************/
/***/ (function(module) {

eval("module.exports = function () {\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n        if (window.location.pathname === '/index.html') {\r\n            let scrollText1 = document.querySelector('section.single-img .scroll-text.scroll-text-1');\r\n            let scrollText2 = document.querySelector('section.single-img .scroll-text.scroll-text-2');\r\n\r\n            gsap.set(scrollText1, {css: {right: -scrollText1.offsetWidth + 'px'}});\r\n            gsap.set(scrollText2, {css: {left: -scrollText2.offsetWidth + 'px'}});\r\n\r\n            try {\r\n                gsap\r\n                    .timeline({\r\n                        scrollTrigger: {\r\n                            trigger: 'section.single-img',\r\n                            scrub: 0.5,\r\n                            start: 'top bottom',\r\n                            end: 'bottom 30%',\r\n                        }\r\n                    })\r\n                    .to(scrollText1, {x: '-=100%'}, 0)\r\n                    .to(scrollText2, {x: '+=100%'}, 0)\r\n            } catch (e) {\r\n                console.warn(e.message)\r\n            }\r\n        }\r\n    })\r\n}\n\n//# sourceURL=webpack://gulp_build/./src/js/modules/text-scroll-anim.js?");

/***/ }),

/***/ "./src/js/modules/text-scroll-banner.js":
/*!**********************************************!*\
  !*** ./src/js/modules/text-scroll-banner.js ***!
  \**********************************************/
/***/ (function(module) {

eval("module.exports = function () {\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n        try {\r\n            if (window.location.pathname === '/portfolio-page.html') {\r\n                let scrollTextHide = document.querySelector('.text-block.banner .scroll-text-hide');\r\n                let { offsetWidth: blockTextWidth } = scrollTextHide;\r\n                let scrollTextBanner1 = document.querySelector('.text-block.banner .scroll-text.scroll-text-1');\r\n                let scrollTextBanner2 = document.querySelector('.text-block.banner .scroll-text.scroll-text-2');\r\n\r\n                ScrollTrigger.matchMedia({\r\n                    \"(min-width: 601px)\": function() {\r\n                        gsap\r\n                            .timeline({\r\n                                scrollTrigger: {\r\n                                    trigger: '.text-block.banner',\r\n                                    scrub: 1,\r\n                                    start: 'top bottom-=10%',\r\n                                    end: 'bottom 60%',\r\n                                }\r\n                            })\r\n                            .to(scrollTextBanner1, {x: (blockTextWidth + (scrollTextBanner1.offsetWidth)) + 'px'}, 0)\r\n                            .to(scrollTextBanner2, {x: -(blockTextWidth + (scrollTextBanner2.offsetWidth)) + 'px'}, 0)\r\n                    },\r\n                    \"(max-width: 600px)\": function() {\r\n                        gsap\r\n                            .timeline({\r\n                                scrollTrigger: {\r\n                                    trigger: '.text-block.banner',\r\n                                    scrub: 1,\r\n                                    start: 'top bottom-=10%',\r\n                                    end: 'bottom 60%',\r\n                                }\r\n                            })\r\n                            .to(scrollTextBanner1, {x: (blockTextWidth + (scrollTextBanner1.offsetWidth -400)) + 'px'}, 0)\r\n                            .to(scrollTextBanner2, {x: -(blockTextWidth + (scrollTextBanner2.offsetWidth -400)) + 'px'}, 0)\r\n                    },\r\n                })\r\n            }\r\n        } catch (e) {\r\n            console.warn(e.message)\r\n        }\r\n    })\r\n}\n\n//# sourceURL=webpack://gulp_build/./src/js/modules/text-scroll-banner.js?");

/***/ }),

/***/ "./src/js/modules/text-scroll-index.js":
/*!*********************************************!*\
  !*** ./src/js/modules/text-scroll-index.js ***!
  \*********************************************/
/***/ (function(module) {

eval("module.exports = function () {\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n        try {\r\n            if (window.location.pathname === '/index.html') {\r\n                let scrollTextHide = document.querySelector('.single-img.banner .scroll-text-hide');\r\n                let { offsetWidth: blockTextWidth } = scrollTextHide;\r\n                let scrollTextBanner1 = document.querySelector('.single-img.banner .scroll-text.scroll-text-1');\r\n                let scrollTextBanner2 = document.querySelector('.single-img.banner .scroll-text.scroll-text-2');\r\n\r\n                ScrollTrigger.matchMedia({\r\n                    \"(min-width: 601px)\": function() {\r\n                        gsap\r\n                            .timeline({\r\n                                scrollTrigger: {\r\n                                    trigger: '.single-img.banner',\r\n                                    scrub: 1,\r\n                                    start: 'top bottom-=10%',\r\n                                    end: 'bottom 60%',\r\n                                }\r\n                            })\r\n                            .to(scrollTextBanner1, {x: (blockTextWidth + (scrollTextBanner1.offsetWidth)) + 'px'}, 0)\r\n                            .to(scrollTextBanner2, {x: -(blockTextWidth + (scrollTextBanner2.offsetWidth)) + 'px'}, 0)\r\n                    },\r\n                    \"(max-width: 600px)\": function() {\r\n                        gsap\r\n                            .timeline({\r\n                                scrollTrigger: {\r\n                                    trigger: '.single-img.banner',\r\n                                    scrub: 1,\r\n                                    start: 'top bottom-=10%',\r\n                                    end: 'bottom 60%',\r\n                                }\r\n                            })\r\n                            .to(scrollTextBanner1, {x: (blockTextWidth + (scrollTextBanner1.offsetWidth -400)) + 'px'}, 0)\r\n                            .to(scrollTextBanner2, {x: -(blockTextWidth + (scrollTextBanner2.offsetWidth -400)) + 'px'}, 0)\r\n                    },\r\n                })\r\n            }\r\n        } catch (e) {\r\n            console.warn(e.message)\r\n        }\r\n    })\r\n}\n\n//# sourceURL=webpack://gulp_build/./src/js/modules/text-scroll-index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/main.js");
/******/ 	
/******/ })()
;